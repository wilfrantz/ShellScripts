#!/usr/bin/env bash

# Change log
# 2024-12-12: initial commit
# Changes and Enhancements:
#   - Universal Paths:
#     - Updated brew to use /opt/homebrew/bin/brew, which is the default on Apple Silicon.
#   - Deprecation Fixes:
#     - Removed deprecated brew cask commands, using modern equivalents.
#   - Signal Handling:
#     - Refined trap for better handling of interruptions.
#   - Validation:
#     - Added checks for commands like mas and brew to prevent failures if they’re not installed.
#   - Simplified Logic:
#     - Consolidated redundant logic for os and tools.
#   - User Experience:
#     - Improved output formatting with clear messages and color coding.

set -euo pipefail

# Update Script for macOS and Utilities (Optimized for Apple Silicon M3 and up)
# Usage: 
#   - Run `update os` for macOS updates
#   - Run `update tools` for utility updates
#   - Run `update` for both
# Updated: December 2024

# macOS update function
macOS_updater() {
    echo -e "\n\033[32m[+]\033[0m Starting macOS Update..."
    sudo softwareupdate --all --install --force --verbose --restart
    echo -e "\n\033[32m[✔]\033[0m macOS update completed!\n"
}

# Utilities update function
utils_runner() {
    trap 'echo -e "\n\033[31m[✘]\033[0m Update interrupted!"' SIGINT SIGTERM

    echo -e "\n\033[32m[+]\033[0m Starting utilities update..."

    # Update Mac App Store apps (requires mas-cli)
    if command -v mas &>/dev/null; then
        echo -e "\n[+] Updating Mac App Store apps..."
        mas upgrade || echo "mas upgrade failed. Please ensure mas-cli is installed."
    else
        echo "mas-cli not found. Skipping Mac App Store updates."
    fi

    # Update Brew packages
    if command -v brew &>/dev/null; then
        echo -e "\n[+] Updating Homebrew packages and casks..."
        brew update && brew upgrade && brew upgrade --cask || {
            echo "Homebrew update failed. Check Homebrew installation.";
            return 1;
        }
    else
        echo "Homebrew not found. Skipping Brew updates."
    fi

    echo -e "\n\033[32m[✔]\033[0m Utilities update completed!\n"
}

# Main script logic
main() {
    if [[ $# -gt 1 ]]; then
        echo -e "\033[31m[✘]\033[0m Too many arguments! Usage: update [os/tools]"
        exit 1
    fi

    case "${1:-all}" in
        os)
            [[ "$(uname -s)" == "Darwin" ]] && macOS_updater || echo "Not a macOS system. Skipping macOS update."
            ;;
        tools)
            utils_runner
            ;;
        all)
            [[ "$(uname -s)" == "Darwin" ]] && macOS_updater
            utils_runner
            ;;
        *)
            echo -e "\033[31m[✘]\033[0m Invalid option! Usage: update [os/tools]"
            exit 2
            ;;
    esac
}

# Run the script
main "$@"